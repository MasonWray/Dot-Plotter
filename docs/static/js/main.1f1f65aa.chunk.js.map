{"version":3,"sources":["components/Navbar.js","components/FileSelector.js","components/Layers.js","components/Preview.js","components/Parameters.js","components/Body.js","App.js","index.js"],"names":["Navbar","className","href","FileSelector","props","type","onChange","e","file","target","files","fr","FileReader","img","Image","onload","canvas","current","context","getContext","src","result","height","width","drawImage","imgd","getImageData","pix","data","sendImageData","readAsDataURL","Layer","visible","xmlns","fill","onClick","d","name","viewBox","Layers","useState","keyweight","setKeyweight","cyan","magenta","yellow","black","visibility","setVisibility","imageData","i","n","length","m","Math","max","putImageData","class","min","step","value","Preview","ref","canvasRef","Parameters","Body","setImageData","useRef","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f1f65aa.chunk.js","sourcesContent":["function Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-brand\" href=\"#\">Dot Plotter</div>\r\n            </div >\r\n\r\n        </nav >\r\n    );\r\n}\r\n\r\nexport default Navbar;","function FileSelector(props) {\r\n    const handleFileChange = (e) => {\r\n        var file = e.target.files[0];\r\n\r\n        // Load pixel data into array when file is selected\r\n        if (file) {\r\n            var fr = new FileReader();\r\n            var img = new Image();\r\n            fr.onload = () => {\r\n                // Set the canvas size and draw the original image to it\r\n                var canvas = props.canvas.current;\r\n                var context = canvas.getContext(\"2d\");\r\n                img.src = fr.result;\r\n                img.onload = () => {\r\n                    canvas.height = img.height;\r\n                    canvas.width = img.width;\r\n                    context.drawImage(img, 0, 0);\r\n\r\n                    // Get pixel data from the canvas and send it up\r\n                    var imgd = context.getImageData(0, 0, img.width, img.height);\r\n                    var pix = [...imgd.data];\r\n\r\n                    props.sendImageData({\r\n                        pix: pix,\r\n                        width: img.width,\r\n                        height: img.height\r\n                    })\r\n                }\r\n            }\r\n            fr.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">File Selector</div>\r\n            <div className=\"card-body\">\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"form-control-file\"\r\n                        onChange={handleFileChange} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileSelector;","import { useState } from \"react\";\r\n\r\nfunction Layers(props) {\r\n    const [keyweight, setKeyweight] = useState(1)\r\n    const [visibility, setVisibility] = useState({\r\n        cyan: true,\r\n        magenta: true,\r\n        yellow: true,\r\n        black: true\r\n    })\r\n\r\n    // Apply layer visibility\r\n    if (props.imageData) {\r\n\r\n        // Clear the preview canvas and set it to the correct size\r\n        var canvas = props.canvas.current;\r\n        var context = canvas.getContext(\"2d\");\r\n        canvas.height = props.imageData.height;\r\n        canvas.width = props.imageData.width;\r\n\r\n        // Get ImageData for per-pixel editing\r\n        var imgd = context.getImageData(0, 0, props.imageData.width, props.imageData.height);\r\n        var pix = imgd.data;\r\n\r\n        // Start with white paper\r\n        for (var i = 0, n = pix.length; i < n; i += 4) {\r\n            pix[i + 0] = 255; // red\r\n            pix[i + 1] = 255; // green\r\n            pix[i + 2] = 255; // blue\r\n            pix[i + 3] = 255; // alpha\r\n        }\r\n\r\n        // Paint cyan plate\r\n        if (visibility.cyan) {\r\n            for (var i = 0, n = pix.length; i < n; i += 4) {\r\n                pix[i + 0] = pix[i + 0] - (255 - props.imageData.pix[i + 0])\r\n\r\n                // Set keyweight\r\n                var m = Math.max(props.imageData.pix[i + 0], props.imageData.pix[i + 1], props.imageData.pix[i + 2])\r\n                pix[i + 0] = pix[i + 0] + (255 - m) * keyweight\r\n            }\r\n        }\r\n\r\n        // Paint magenta plate\r\n        if (visibility.magenta) {\r\n            for (var i = 0, n = pix.length; i < n; i += 4) {\r\n                pix[i + 1] = pix[i + 1] - (255 - props.imageData.pix[i + 1])\r\n\r\n                // Set keyweight\r\n                var m = Math.max(props.imageData.pix[i + 0], props.imageData.pix[i + 1], props.imageData.pix[i + 2])\r\n                pix[i + 1] = pix[i + 1] + (255 - m) * keyweight\r\n            }\r\n        }\r\n\r\n        // Paint yellow plate\r\n        if (visibility.yellow) {\r\n            for (var i = 0, n = pix.length; i < n; i += 4) {\r\n                pix[i + 2] = pix[i + 2] - (255 - props.imageData.pix[i + 2])\r\n\r\n                // Set keyweight\r\n                var m = Math.max(props.imageData.pix[i + 0], props.imageData.pix[i + 1], props.imageData.pix[i + 2])\r\n                pix[i + 2] = pix[i + 2] + (255 - m) * keyweight\r\n            }\r\n        }\r\n\r\n        // Paint black plate\r\n        if (visibility.black) {\r\n            for (var i = 0, n = pix.length; i < n; i += 4) {\r\n                var m = Math.max(props.imageData.pix[i + 0], props.imageData.pix[i + 1], props.imageData.pix[i + 2])\r\n                pix[i + 0] = pix[i + 0] - (255 - m) * keyweight\r\n                pix[i + 1] = pix[i + 1] - (255 - m) * keyweight\r\n                pix[i + 2] = pix[i + 2] - (255 - m) * keyweight\r\n            }\r\n        }\r\n\r\n        context.putImageData(imgd, 0, 0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                {\"Layers\"}\r\n            </div>\r\n\r\n            <ul className=\"list-group list-group-flush\">\r\n                <Layer\r\n                    name=\"Cyan\"\r\n                    visible={visibility.cyan}\r\n                    onClick={() => {\r\n                        setVisibility({\r\n                            cyan: !visibility.cyan,\r\n                            magenta: visibility.magenta,\r\n                            yellow: visibility.yellow,\r\n                            black: visibility.black\r\n                        })\r\n                    }}\r\n                />\r\n                <Layer\r\n                    name=\"Magenta\"\r\n                    visible={visibility.magenta}\r\n                    onClick={() => {\r\n                        setVisibility({\r\n                            cyan: visibility.cyan,\r\n                            magenta: !visibility.magenta,\r\n                            yellow: visibility.yellow,\r\n                            black: visibility.black\r\n                        })\r\n                    }}\r\n                />\r\n                <Layer\r\n                    name=\"Yellow\"\r\n                    visible={visibility.yellow}\r\n                    onClick={() => {\r\n                        setVisibility({\r\n                            cyan: visibility.cyan,\r\n                            magenta: visibility.magenta,\r\n                            yellow: !visibility.yellow,\r\n                            black: visibility.black\r\n                        })\r\n                    }}\r\n                />\r\n                <Layer\r\n                    name=\"Black\"\r\n                    visible={visibility.black}\r\n                    onClick={() => {\r\n                        setVisibility({\r\n                            cyan: visibility.cyan,\r\n                            magenta: visibility.magenta,\r\n                            yellow: visibility.yellow,\r\n                            black: !visibility.black\r\n                        })\r\n                    }}\r\n                />\r\n            </ul>\r\n            <div className=\"card-footer\">\r\n                <label class=\"form-label\">{`Key Weight: ${keyweight * 100}%`}</label>\r\n                <input\r\n                    type=\"range\"\r\n                    className=\"form-range\"\r\n                    min=\"0\"\r\n                    max=\"1\"\r\n                    step=\"0.1\"\r\n                    onChange={(e) => { setKeyweight(e.target.value) }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Layer(props) {\r\n    if (props.visible) {\r\n        return (\r\n            <li className=\"list-group-item\">\r\n                <svg\r\n                    className=\"mr-4\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\" height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-eye-fill\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    onClick={props.onClick}>\r\n                    <path d=\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z\" />\r\n                    <path d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z\" />\r\n                </svg>\r\n                <label className=\"float-right\">{props.name}</label>\r\n            </li>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <li className=\"list-group-item\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-eye-slash-fill\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    onClick={props.onClick}>\r\n                    <path d=\"M10.79 12.912l-1.614-1.615a3.5 3.5 0 0 1-4.474-4.474l-2.06-2.06C.938 6.278 0 8 0 8s3 5.5 8 5.5a7.027 7.027 0 0 0 2.79-.588zM5.21 3.088A7.028 7.028 0 0 1 8 2.5c5 0 8 5.5 8 5.5s-.939 1.721-2.641 3.238l-2.062-2.062a3.5 3.5 0 0 0-4.474-4.474L5.21 3.088z\" />\r\n                    <path d=\"M5.525 7.646a2.5 2.5 0 0 0 2.829 2.829l-2.83-2.829zm4.95.708l-2.829-2.83a2.5 2.5 0 0 1 2.829 2.829zm3.171 6l-12-12 .708-.708 12 12-.708.707z\" />\r\n                </svg>\r\n                <label className=\"float-right\">{props.name}</label>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nfunction VisToggle(props) {\r\n\r\n}\r\n\r\nexport default Layers;","function Preview(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Preview\r\n        </div>\r\n            <div className=\"card-body d-flex justify-content-center\">\r\n                <canvas ref={props.canvasRef}></canvas>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Preview;","function Parameters() {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                Parameters\r\n        </div>\r\n            <div className=\"card-body\">\r\n                This is some text within a card body.\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Parameters;","import React, { useState, useRef } from 'react';\r\n\r\nimport FileSelector from './FileSelector';\r\nimport Layers from './Layers';\r\nimport Preview from './Preview';\r\nimport Parameters from './Parameters';\r\n\r\nfunction Body() {\r\n    // Source file\r\n    const [imageData, setImageData] = useState(null)\r\n    const sendImageData = (d) => { setImageData(d) }\r\n\r\n    // Preview canvas reference\r\n    const canvas = useRef(null);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {/* Left Sidebar */}\r\n                <div className=\"col-sm-3\">\r\n                    <FileSelector\r\n                        canvas={canvas}\r\n                        sendImageData={sendImageData}\r\n                    />\r\n\r\n                    <Layers\r\n                        canvas={canvas}\r\n                        imageData={imageData}\r\n                    />\r\n                </div>\r\n                {/* Preview Area */}\r\n                <div className=\"col-sm-6\">\r\n                    <Preview\r\n                        canvasRef={canvas}\r\n                    />\r\n                </div>\r\n                {/* Right Sidebar */}\r\n                <div className=\"col-sm-3\">\r\n                    <Parameters />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Body;","// import '../node_modules/popper.js/dist/popper.js';\n// import '../node_modules/jquery/dist/jquery.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n// import '../node_modules/bootstrap/dist/js/bootstrap.js';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle'\n\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}